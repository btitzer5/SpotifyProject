@page "{id}"
@model SpotifyProject.Pages.Artists.DetailsModel
@{
    ViewData["Title"] = "Artist";
}

@if (Model.Artist is null)
{
    <p class="text-muted">Artist not found.</p>
}
else
{
    <div class="entity-header card mb-4 p-3 d-flex gap-3">
        <div class="entity-image">
            @if (!string.IsNullOrEmpty(Model.Artist.Images?.FirstOrDefault()?.Url))
            {
                <img src="@Model.Artist.Images.OrderByDescending(i => i.Width).First().Url" alt="@Model.Artist.Name" class="img-fluid rounded" style="max-height:160px" />
            }
        </div>
        <div class="flex-fill">
            <div class="d-flex align-items-start justify-content-between">
                <div>
                    <h1 class="h3 mb-1">@Model.Artist.Name</h1>
                    <div class="text-muted small">@string.Join(", ", Model.Artist.Genres ?? new List<string>())</div>
                </div>
                <div class="text-end">
                    @if (!string.IsNullOrEmpty(Model.Artist.Id))
                    {
                        <a class="spotify-btn btn btn-success btn-sm" target="_blank" rel="noopener" href="https://open.spotify.com/artist/@Model.Artist.Id">Open in Spotify</a>
                    }
                    <div class="mt-2">
                        @{
                            var followersDisplay = Model.Metrics != null
                                ? Model.Metrics.Followers.ToString("N0")
                                : (Model.Artist.Followers?.Total.ToString("N0"));
                        }
                        <span class="text-muted ms-2 small">@followersDisplay followers</span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    
    <section class="mb-4">
        <div class="card artist-metrics p-3 mb-4">
            <div class="metrics-grid">
                <div class="metric text-center">
                    <div class="metric-value">
                        @(
                            Model.Metrics != null
                                ? Model.Metrics.Followers.ToString("N0")
                                : (Model.Artist.Followers?.Total.ToString("N0") ?? "—")
                        )
                    </div>
                    <div class="metric-label text-muted small">Followers</div>
                </div>

                <div class="metric text-center">
                    <div class="metric-value">
                        @(
                            Model.Metrics != null
                                ? Model.Metrics.Popularity.ToString()
                                : Model.Artist.Popularity.ToString()
                        )
                    </div>
                    <div class="metric-label text-muted small">Popularity</div>
                </div>

                <div class="metric text-center">
                    @{
                        var latestRelease = Model.Albums?.OrderByDescending(a => a.ReleaseDate).FirstOrDefault()?.ReleaseDate;
                        var latestDisplay = string.IsNullOrWhiteSpace(latestRelease) ? "—" : latestRelease;
                    }
                    <div class="metric-value">@latestDisplay</div>
                    <div class="metric-label text-muted small">Latest Release</div>
                </div>
            </div>

            <div class="text-end mt-2 small text-muted">
                <span>Metrics from Spotify public API (accurate & fast).</span>
                @if (Model.Metrics != null)
                {
                    <div class="text-muted small">Updated @Model.Metrics.RetrievedAt.ToLocalTime().ToString("g")</div>
                }
            </div>
        </div>
    </section>

    <!-- Top Tracks and Albums sections unchanged -->
    <section class="mb-4">
        <h4 class="h5">Top Tracks</h4>
        @if (!Model.TopTracks.Any())
        {
            <p class="text-muted">No top tracks available.</p>
        }
        else
        {
            <ol class="list-group list-group-numbered mb-3">
            @foreach (var t in Model.TopTracks)
            {
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <div>
                        <a class="fw-semibold" href="/Track/@t.Id">@t.Name</a>
                        <div class="text-muted small">@string.Join(", ", t.Artists.Select(a => a.Name))</div>
                    </div>
                    <div class="text-muted small">@TimeSpan.FromMilliseconds(t.DurationMs).ToString(@"m\:ss")</div>
                </li>
            }
            </ol>
        }
    </section>

    <section>
        <h4 class="h5">Albums & Singles</h4>
        @if (!Model.Albums.Any())
        {
            <p class="text-muted">No albums available.</p>
        }
        else
        {
            <div class="row g-3">
            @foreach (var a in Model.Albums)
            {
                var cover = a.Images?.OrderByDescending(i => i.Width).FirstOrDefault()?.Url;
                <div class="col-6 col-md-3">
                    <div class="card h-100">
                        @if (!string.IsNullOrEmpty(cover))
                        {
                            <a href="/Album/@a.Id"><img src="@cover" class="card-img-top" alt="@a.Name" /></a>
                        }
                        <div class="card-body p-2">
                            <h6 class="card-title mb-1 text-truncate"><a href="/Album/@a.Id" class="text-decoration-none">@a.Name</a></h6>
                            <div class="text-muted small">@a.ReleaseDate</div>
                        </div>
                    </div>
                </div>
            }
            </div>
        }
    </section>
}